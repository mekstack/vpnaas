nameOverride: ""

microservicesCommon:
  repository: ghcr.io/mekstack/vpnaas
  pullPolicy: Always
  tag: latest
  containerPorts:
  - containerPort: 80
    protocol: TCP

microservices:
  keys:
    env:
    - name: RUST_LOG
      value: info
    - name: VPNAAS_REDIS_USERNAME
      value: default
    - name: VPNAAS_REDIS_HOSTNAME
      value: redis-keys-master
    - name: VPNAAS_REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: redis
          key: redis-pass
    - name: VPNAAS_JWKS_URL
      value: "https://vault.mekstack.ru/v1/identity/oidc/provider/hse/.well-known/keys"
  wg:
    podSecurityContext:
      sysctls:
      - name: net.ipv4.ip_forward
        value: "1"
    containerSecurityContext:
      capabilities:
        add:
        - NET_ADMIN
        - SYS_MODULE
    containerPorts:
      - containerPort: 80
        protocol: TCP
      - containerPort: 51820
        protocol: UDP
    env:
    - name: RUST_LOG
      value: info
    - name: VPNAAS_WGDEVICE_PRIVKEY
      valueFrom:
        secretKeyRef:
          name: wg
          key: wgdevice-privkey
  confus:
    env:
    - name: RUST_LOG
      value: info
    - name: VPNAAS_INTERFACE_CONFIG
      value: |
        PrivateKey = YOUR_PRIVATE_KEY
        DNS = 172.18.218.200
        MTU = 1376
    - name: VPNAAS_PEER_CONFIG
      value: |
        PublicKey  = bjF96fpIhZcIuAqFxiJoP8kTAjy4A0Lba/bBA6d2HF8=
        Endpoint   = wg.mekstack.ru:51820
        AllowedIPs = 172.18.218.0/23
  web: {}

redis:
  fullnameOverride: redis-keys
  global:
    storageClass: csi-cinder-sc-delete
  auth:
    existingSecret: redis
    existingSecretPasswordKey: redis-pass
  master:
    persistence:
      existingClaim: "redis-data-redis-keys-master-0"
